---
import Layout from "../layouts/Layout.astro";
import '/coin-flip.scss';
---

<Layout title="Coin Flipper | Spin a Coin and get heads or tails" url="https://www.desktools.tk/flip-a-coin/"
    description="Click the button to flip a coin and get heads or tails.">
    <main>
        <div class="col-md-8 mb-4">
            <h1 id="intro-heading">Flip a coin</h1>
            <p>Click the button to spin a coin and get heads or tails.</p>
            <div class="form-check form-switch">
                <label class="form-check-label" for="darkmode">Dark mode</label>
                <input class="form-check-input" type="checkbox" role="switch" id="darkmode" checked>
            </div>
        </div>


        <div class="card mb-5 p-4 bg-dark" id="bg">
            <div class="row">

                <div class="col-12 d-flex justify-content-center mb-4 gap-3">
                    <button class="btn btn-primary" id="spin">Flip</button>
                    <button class="btn btn-primary" id="reset">Reset</button>
                </div>
                <div class="col-12 d-flex justify-content-center gap-3 mb-4 text-white" id="stats">
                    <p><strong>Heads:</strong> <span id="heads-counter">0</span></p>
                    <p><strong>Tails:</strong> <span id="tails-counter">0</span></p>
                </div>
                <div class="col-12 d-flex justify-content-center mb-3">
                    <div class="outer">
                        <div class="coin" id="coin-container">
                            <div class="heads">
                            </div>
                            <div class="tails">
                            </div>
                            <div class="side">
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                                <div class="spoke"></div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <article class="card p-4">
            <div class="col-md-8">
                <h2>Credit</h2>
                <p>Coin Illustration <a href="http://www.freepik.com">Designed by Freepik</a></p>
                <p>Give your coin depth: <a href="https://codepen.io/jasonhibbs/pen/DePMBb">Codepen</a></p>
                <p><a href="https://codepen.io/noeldj/pen/PoBjMwP">Get Source Code</a></p>
            </div>
        </article>
    </main>
</Layout>

<script>
    window.addEventListener('DOMContentLoaded', () => {
        const time = 1.75
        const btn = document.querySelector('#spin')
        const reset = document.querySelector('#reset')
        const coin = document.querySelector('.coin')
        let headsCounter = 0
        let tailsCounter = 0
        let rotateX = 0
        let rotateY = 0
        let toggle = true

        coin.style.transition = time + 's'

        reset.addEventListener('click', (e) => {
            let currentDegrees = parseInt(coin.style.transform.replace(/\D+/g, ''))

            if (isNaN(currentDegrees)) {
                currentDegrees = 0
            }

            const rotation = currentDegrees + 120
            headsCounter = 0
            tailsCounter = 0
            updateStats('reset')
            disableButton()
            coin.animate([{
                    transform: `rotateX(${currentDegrees}deg)`
                },
                {
                    transform: `rotateX(${rotation}deg)`
                },
                {
                    transform: `rotateX(${currentDegrees}deg)`
                }
            ], {
                duration: 1000
            })
        })

        btn.addEventListener('click', (e) => {
            coin.style.animation = ''
            const side = flipCoin()
            animateCoin(side)
            disableButton()
            setTimeout(() => {
                updateStats(side)
            }, time * 1000);
        })

        function updateStats(side) {
            if (side == 'heads') {
                headsCounter++
            }
            if (side == 'tails') {
                tailsCounter++
            }
            if (side == 'reset') {
                headsCounter = 0
                tailsCounter = 0
            }
            document.querySelector('#heads-counter').textContent = headsCounter
            document.querySelector('#tails-counter').textContent = tailsCounter
        }

        function disableButton() {
            document.querySelectorAll('button').forEach(e => {
                setTimeout(() => {
                    e.disabled = false
                }, time * 1000);
                e.disabled = true
            })
        }

        function flipCoin() {
            let result = ''
            return Math.floor(Math.random() * 2) ? result = 'heads' : result = 'tails'
        }

        function animateCoin(newSide) {
            let spin = 0
            let oldSide = rotateX % 360

            oldSide === 0 ? oldSide = 'heads' : oldSide = 'tails'

            if (oldSide == 'heads' && newSide == 'heads') {
                spin = 360
            }

            if (oldSide == 'heads' && newSide == 'tails') {
                spin = 180
            }

            if (oldSide == 'tails' && newSide == 'heads') {
                spin = 180
            }

            if (oldSide == 'tails' && newSide == 'tails') {
                spin = 360
            }

            spin += 360

            setTimeout(() => {
                coin.style.transform = `rotateX(${rotateX + spin}deg)`
                rotateX += spin
            }, 1);
        }

        document.querySelector('#darkmode').addEventListener('click', () => {
            document.querySelector('#bg').classList.toggle('bg-dark')
            document.querySelector('#stats').classList.toggle('text-white')
        })

    })
</script>